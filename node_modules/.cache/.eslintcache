[{"/Users/swayambhupanda/serverless-database-app/src/index.js":"1","/Users/swayambhupanda/serverless-database-app/src/reportWebVitals.js":"2","/Users/swayambhupanda/serverless-database-app/src/App.js":"3","/Users/swayambhupanda/serverless-database-app/src/backend.js":"4","/Users/swayambhupanda/serverless-database-app/src/table.jsx":"5","/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/index.js":"6","/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/reportWebVitals.js":"7","/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/App.js":"8","/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/backend.js":"9","/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/table.jsx":"10"},{"size":535,"mtime":1664721389741,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1664721389742,"results":"13","hashOfConfig":"12"},{"size":2260,"mtime":1665070800564,"results":"14","hashOfConfig":"12"},{"size":35563,"mtime":1664966756238,"results":"15","hashOfConfig":"12"},{"size":685,"mtime":1665070668379,"results":"16","hashOfConfig":"12"},{"size":535,"mtime":1664721389741,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1664721389742,"results":"19","hashOfConfig":"18"},{"size":3097,"mtime":1665075860747,"results":"20","hashOfConfig":"18"},{"size":35563,"mtime":1664966756238,"results":"21","hashOfConfig":"18"},{"size":685,"mtime":1665070668379,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"nuamyv",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dga7fy",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/swayambhupanda/serverless-database-app/src/index.js",[],[],[],"/Users/swayambhupanda/serverless-database-app/src/reportWebVitals.js",[],[],"/Users/swayambhupanda/serverless-database-app/src/App.js",["55"],[],"/Users/swayambhupanda/serverless-database-app/src/backend.js",[],[],"/Users/swayambhupanda/serverless-database-app/src/table.jsx",[],[],"/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/index.js",[],[],"/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/reportWebVitals.js",[],[],"/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/App.js",["56"],[],"\nimport { sampleData } from './backend';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport { React, useState } from 'react';\nimport Select from 'react-select'\nimport Table from './table';\n\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const options = [\n    { value: 'Select ', label: 'Select' },\n    { value: 'companyName', label: 'SELECT CompanyName FROM Customers' },\n    { value: 'contactName', label: 'SELECT CustomerName,Address FROM Customers' },\n    { value: 'contactTitle', label: 'SELECT CustomerName,City FROM Customers' },\n    { value: 'address', label: 'SELECT ContactName,Phone,Fax FROM Customers' },\n\n  ]\n  const val = [[\"customerID\", \"companyName\", \"contactName\", \"contactTitle\", \"address\", \"city\", \"region\", \"postalCode\", \"country\", \"phone\", \"fax\"],\n  [\"companyName\"], [\"companyName\", \"address\"], [\"companyName\", \"city\"], [\"contactName\", \"phone\", \"fax\"]];\n\n  const [keys, setKeys] = useState([\"customerID\", \"companyName\", \"contactName\", \"contactTitle\", \"address\", \"city\", \"region\", \"postalCode\", \"country\", \"phone\", \"fax\"]);\n  const keysForSearch = [\"customerID\", \"companyName\", \"contactName\", \"contactTitle\", \"address\", \"city\", \"region\", \"country\", \"phone\", \"fax\"];\n\n  const MyComponent = () => (\n    <Select options={options} onChange={(e) => {\n      options.map((opt, i) => { if (e.value === opt.value) { setKeys(val[i]) } })\n    }} />\n  )\n\n  const search = (data) => {\n    return data.filter(\n      item =>\n        keysForSearch.some((key) => (item[key].toLowerCase().includes(query)))\n    );\n  };\n\n  return (\n    <>\n      {/* header */}\n      <header style={{ \"border\": \"grey\", \"width\": \"100%\", \"height\": \"8em\" }} className=\"shadow p-3 mb-5 bg-white rounded\">\n        <h1 style={{ \"color\": \"#030EFF\", textAlign: 'center', \"line-height\": \"100px\", \"font-size\": \"8em\" }} >atlan</h1>\n      </header>\n      {/* dropDown */}\n      <div Style=\"margin:45px\">\n        <label style={{ \"color\": \"#00688E\", \"font-size\": \"1.5em\", \"font-weight\": \"bold\", \"margin-bottom\": \"10px\" }} title=\"Select a query from dropdown to display the desired table output\"> Select a query</label>\n        {MyComponent()}\n      </div>\n\n      {/* Search bar */}\n      <div className='container' Style=\"margin:30px\">\n        <div><label style={{ \"color\": \"#00688E\", \"font-size\": \"1.5em\", \"font-weight\": \"bold\", \"margin-bottom\": \"10px\" }} title=\"Search for keywords to display from the table\"> Search your selection</label></div>\n        <div><input type=\"text\" placeholder='Search...' className=\"search\" onChange={(e) => setQuery(e.target.value)} /></div>\n      </div>\n\n      {/* Table */}\n      <div Style=\"margin:30px\" >\n        <div><label style={{ \"color\": \"#118C77\", \"font-size\": \"2em\", \"font-weight\": \"bold\", \"margin-bottom\": \"10px\" }}> Result:</label></div>\n        <Table data={search(sampleData)} keys={keys} />\n      </div>\n\n      {/* Footer */}\n      <div className=\"text-center p-3\" style={{ \"background-color\": \"rgba(0, 0, 0, 0.2)\" }}>\n        Â© 2022 Copyright:\n        <a className=\"text-dark\" href=\"https://atlan.com/\">atlan.com</a>\n      </div>\n    </>\n  );\n}\nexport default App;\n","/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/backend.js",[],[],"/Users/swayambhupanda/Documents/GitHub/swayambhu_atlan_search/src/table.jsx",[],[],{"ruleId":"57","severity":1,"message":"58","line":27,"column":28,"nodeType":"59","messageId":"60","endLine":27,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":27,"column":28,"nodeType":"59","messageId":"60","endLine":27,"endColumn":30},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]